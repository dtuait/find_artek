# Specialized docker-compose file for development environment using "manage.py runserver" command
# This file is used to start the development server and the database server
#
# The development server is started with the command:
# docker compose --env-file .dev.env -f docker-compose.develop.yml up -d
#
# Ensure the find-artek-mariadb-dev volume exists by running:
#
# $> docker volume create find-artek-mariadb-dev
# $> docker run --rm -v find-artek-mariadb:/from -v find-artek-mariadb-dev:/to alpine ash -c "cd /from && cp -a . /to"
#
# The last command clones the find-artek-mariadb volume into the find-artek-mariadb-dev volume

services:
  webapp-find-artek-dev:
    restart: always
    container_name: webapp-find-artek-dev
    build:
      context: .
      dockerfile: Dockerfile.develop
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ../00_static_data/find_artek_static:/mnt/shared-project-data
    ports:
      - "8098:8099"
    stdin_open: true
    tty: true
    command: bash -c 'cd /app && python manage.py runserver 0.0.0.0:8099 --settings find_artek.development_settings'
    networks:
      - shared_network


  # nginx:
  #   # build:
  #   #   context: ./docker/nginx
  #   image: nginx:latest
  #   container_name: fa-nginx-service
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
  #     - ../00_static_data/:/usr/share/nginx/staticfiles
  #   networks:
  #     - shared_network


  # CONSIDER HOW TO INSTANTIATE DATABASE!!!
  find-artek-mariadb-service-dev:
    restart: always
    image: mariadb:11.2
    container_name: fa-mariadb-service-dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE} # find-artek-django
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - find-artek-mariadb-dev:/var/lib/mysql         # MAKE SURE THIS VOLUME EXISTS, CLONE IT FROM find-artek-mariadb
      - ./docker/mariadb-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shared_network


  find-artek-phpmyadmin-service-dev:
      restart: always
      image: phpmyadmin/phpmyadmin:latest
      container_name: fa-phpmyadmin-service-dev
      ports:
        - "6002:80"
      environment:
        PMA_HOST: ${MYSQL_HOST}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      volumes:
        - ./docker/phpmyadmin-service/phpmyadmin-misc.ini:/usr/local/etc/php/conf.d/phpmyadmin-misc.ini
      networks:
        - shared_network
 

volumes:
  find-artek-mariadb-dev:
    external: true

    
networks:
  shared_network:
    external: true
