version: '3.8'

services:
  # du behøver ikke namespace her, du gør docker for dig, du kan bare kalde den app-main
  find-artek-app-main:
    image: vicmrp/find-artek-app-main

    # container_name: app-main
    build:
      context: .
      dockerfile: Dockerfile-find-artek-app-main
    volumes:
      - ..:/usr/src/project
      - ../shared-project-data:/mnt/shared-project-data
      
    stdin_open: true
    tty: true
    
    # RUN THIS IN PRODUCTION
    # command: bash -c 'cd /usr/src/project/app-main && rm -rf venv && python3 -m venv venv && source venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt && python manage.py runserver 0.0.0.0:80'
    
    # RUN THIS IN DEVELOPMENT
    # command: bash -c 'cd /usr/src/project/app-main && source venv/bin/activate && sleep infinity'
    # Run this if you want data to come from apache-service
    # command: bash -c 'cd /usr/src/project/app-main && source venv/bin/activate && python manage.py runserver 0.0.0.0:8000'
    command: sleep infinity
    # run this if you want to run directly on the application
    # ports:
    #   - 8080:8080
    
    networks:
      - shared_network







  # find-artek-app-datatransfer:
  #   image: vicmrp/find-artek-app-main
  #   restart: always

  #   build:
  #     context: .
  #     dockerfile: Dockerfile-find-artek-app-main
  #   volumes:
  #     - ..:/usr/src/project
  #     - ../shared-project-data:/mnt/shared-project-data
      
  #   stdin_open: true
  #   tty: true

  #   command: bash -c 'cd /usr/src/project/app-datatransfer && rm -rf venv; python3 -m venv venv && source venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt && sleep infinity'
    
  #   networks:
  #     - shared_network






  find-artek-httpd-service:
    # image: vicmrp/find-artek-httpd-service
    image: httpd:2.4
    # build:
    #   context: .
    #   dockerfile: Dockerfile-find-artek-httpd-service
    # stdin_open: true
    # tty: true


    # volumes:
    #   - ../shared-project-data:/mnt/shared-project-data
    #   - ../httpd-service/data/virtualhosts:/usr/local/apache2/conf/virtualhosts
    #   - ../httpd-service/data/httpd.conf:/usr/local/apache2/conf/httpd.conf
    # networks:
    #   - shared_network
    stdin_open: true
    tty: true
    restart: always


    volumes:
      - ../shared-project-data:/mnt/shared-project-data
      - ../httpd-service/data/virtualhosts:/usr/local/apache2/conf/virtualhosts
      - ../httpd-service/data/httpd.conf:/usr/local/apache2/conf/httpd.conf
    networks:
      - shared_network

# ### postgresql ###
#   find-artek-db:
#     image: postgis/postgis:15-master
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: find-artek-1
#     volumes:
#       - find-artek-postgresql:/var/lib/postgresql/data
#     stdin_open: true
#     tty: true
#     networks:
#       - shared_network

#   find-artek-pgadmin:
#     image: dpage/pgadmin4:latest
#     environment:
#       PGADMIN_DEFAULT_EMAIL: "victor.reipur@gmail.com"
#       PGADMIN_DEFAULT_PASSWORD: "vicmrp"

#     depends_on:
#       - find-artek-db
#     stdin_open: true
#     tty: true
#     volumes:
#      - find-artek-pgadmin:/var/lib/pgadmin
#     networks:
#       - shared_network
# ### postgresql ###


  find-artek-mariadb-service:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: mariadb
      MYSQL_DATABASE: find-artek-django
      MYSQL_USER: mariadb
      MYSQL_PASSWORD: mariadb
    volumes:
      - find-artek-mariadb:/var/lib/mysql
      - ../mariadb-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shared_network



  find-artek-phpmyadmin-service:
      image: phpmyadmin/phpmyadmin:latest
      ports:
        - "6001:80"
      environment:
        PMA_HOST: find-artek-mariadb-service
        MYSQL_ROOT_PASSWORD: mariadb
        MYSQL_USER: mariadb
        MYSQL_PASSWORD: mariadb
      volumes:
        - ../phpmyadmin-service/phpmyadmin-misc.ini:/usr/local/etc/php/conf.d/phpmyadmin-misc.ini
      networks:
        - shared_network


volumes:
  find-artek-postgresql:
    external: true
  find-artek-pgadmin:
    external: true
  find-artek-mariadb:
    external: true

    
networks:
  shared_network:
    external: true

